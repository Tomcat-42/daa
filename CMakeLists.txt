# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(daa LANGUAGES CXX C)

# target
add_library(daa SHARED "")
set_target_properties(daa PROPERTIES OUTPUT_NAME "daa")
set_target_properties(daa PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/..")
add_dependencies(daa libdaa)
target_include_directories(daa PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_include_directories(daa PRIVATE
    /home/pablo/.xmake/packages/p/pybind11/v2.10.0/41ef60b323db424f8cf3967e35d79f9e/include
    /usr/include/python3.10
)
target_compile_options(daa PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:C>:-fPIC>
    $<$<COMPILE_LANGUAGE:CXX>:-fPIC>
    $<$<COMPILE_LANGUAGE:C>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:CXX>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:C>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:C>:-Ofast>
    $<$<COMPILE_LANGUAGE:CXX>:-Ofast>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(daa PRIVATE -W3)
    target_compile_options(daa PRIVATE -WX)
else()
    target_compile_options(daa PRIVATE -Wall)
    target_compile_options(daa PRIVATE -Werror)
endif()
set_target_properties(daa PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(daa PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(daa PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(daa PRIVATE -O3)
endif()
if(MSVC)
    set_property(TARGET daa PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(daa PRIVATE
    python3.10
    ssl
    crypto
    ffi
    z
    libdaa
)
target_link_directories(daa PRIVATE
    /usr/lib
    build/linux/x86_64/release
)
target_link_options(daa PRIVATE
    -m64
    -lgtest
)
target_sources(daa PRIVATE
    src/daa/sorting/quicksort.cpp
)

# target
add_library(libdaa STATIC "")
set_target_properties(libdaa PROPERTIES OUTPUT_NAME "libdaa")
set_target_properties(libdaa PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(libdaa PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_compile_options(libdaa PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:C>:-fPIC>
    $<$<COMPILE_LANGUAGE:CXX>:-fPIC>
    $<$<COMPILE_LANGUAGE:C>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:CXX>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:C>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:C>:-Ofast>
    $<$<COMPILE_LANGUAGE:CXX>:-Ofast>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(libdaa PRIVATE -W3)
    target_compile_options(libdaa PRIVATE -WX)
else()
    target_compile_options(libdaa PRIVATE -Wall)
    target_compile_options(libdaa PRIVATE -Werror)
endif()
set_target_properties(libdaa PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(libdaa PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(libdaa PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(libdaa PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(libdaa PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET libdaa PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(libdaa PRIVATE
    src/libdaa/sorting/quicksort.cpp
)

# target
add_executable(main "")
set_target_properties(main PROPERTIES OUTPUT_NAME "main")
set_target_properties(main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(main libdaa)
target_include_directories(main PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_compile_options(main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:C>:-fPIC>
    $<$<COMPILE_LANGUAGE:CXX>:-fPIC>
    $<$<COMPILE_LANGUAGE:C>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:CXX>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:C>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:C>:-Ofast>
    $<$<COMPILE_LANGUAGE:CXX>:-Ofast>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(main PRIVATE -W3)
    target_compile_options(main PRIVATE -WX)
else()
    target_compile_options(main PRIVATE -Wall)
    target_compile_options(main PRIVATE -Werror)
endif()
set_target_properties(main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(main PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(main PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(main PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(main PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(main PRIVATE
    libdaa
)
target_link_directories(main PRIVATE
    build/linux/x86_64/release
)
target_link_options(main PRIVATE
    -m64
    -lgtest
)
target_sources(main PRIVATE
    src/main.cpp
)

# target
add_executable(test "")
set_target_properties(test PROPERTIES OUTPUT_NAME "test")
set_target_properties(test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(test libdaa)
target_include_directories(test PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_include_directories(test PRIVATE
    /home/pablo/.xmake/packages/g/gtest/1.12.1/77b9096bc4b34d9282f672d36b015ba9/include
)
target_compile_definitions(test PRIVATE
    GTEST_HAS_PTHREAD=1
)
target_compile_options(test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-strict-aliasing>
    $<$<COMPILE_LANGUAGE:C>:-fPIC>
    $<$<COMPILE_LANGUAGE:CXX>:-fPIC>
    $<$<COMPILE_LANGUAGE:C>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:CXX>:-fvisibility=hidden>
    $<$<COMPILE_LANGUAGE:C>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:CXX>:-fno-trapping-math>
    $<$<COMPILE_LANGUAGE:C>:-Ofast>
    $<$<COMPILE_LANGUAGE:CXX>:-Ofast>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(test PRIVATE -W3)
    target_compile_options(test PRIVATE -WX)
else()
    target_compile_options(test PRIVATE -Wall)
    target_compile_options(test PRIVATE -Werror)
endif()
set_target_properties(test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test PRIVATE
    gtest
    gtest_main
    gmock
    libdaa
    pthread
)
target_link_directories(test PRIVATE
    /home/pablo/.xmake/packages/g/gtest/1.12.1/77b9096bc4b34d9282f672d36b015ba9/lib
    /usr/lib
    build/linux/x86_64/release
)
target_link_options(test PRIVATE
    -m64
    -lgtest
)
target_sources(test PRIVATE
    test/sorting/quicksort/shuffled/quicksort_shuffled_tests.cpp
    test/sorting/quicksort/ordered/quicksort_ordered_tests.cpp
    test/sorting/quicksort/reverse_ordered/quicksort_reverse_ordered_tests.cpp
    test/main.cpp
)

